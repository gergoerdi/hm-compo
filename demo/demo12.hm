data Maybe a = Nothing | Just a
data Bool = True | False
data Pair a b = Pair a b

not = \b -> case b of
    True -> False
    False -> True

isJust = \m -> case m of
    Nothing -> False
    Just _ -> True

f = \x -> let y = not x
              z = False
  in (isJust x)

-- g = \x -> let y = not x
--   in (isJust x)

-- f = \m -> case m of
--     Nothing -> False
--     Just x -> Just x
